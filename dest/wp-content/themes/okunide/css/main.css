@charset "UTF-8";
/* Functions */
/* Mixins */
article, aside, details, figcaption, figure, footer, header, nav, section, summary, menu, main { display: block; }

audio, canvas, video, progress { display: inline-block; vertical-align: middle; }

audio:not([controls]), [hidden], template { display: none; height: 0; }

* { box-sizing: inherit; padding: 0; margin: 0; font-size: inherit; line-height: inherit; }

*:after, *:before { box-sizing: inherit; }

:after, :before { vertical-align: inherit; text-decoration: inherit; }

:root { box-sizing: border-box; -ms-overflow-style: -ms-autohiding-scrollbar; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; text-rendering: optimizeLegibility; }

a { background-color: transparent; }

a:focus { outline: thin dotted; }

a:active, a:hover { outline: 0; }

iframe, img, svg { vertical-align: middle; }

iframe, embed, object { max-width: 100%; }

abbr[title] { border-bottom: none; text-decoration: underline; text-decoration: underline dotted; }

b, strong { font-weight: inherit; font-weight: bolder; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; overflow: auto; margin: 1em 0; }

nav ul, nav ol { list-style: none; }

img { border: 0; -ms-interpolation-mode: bicubic; }

svg:not(:root) { overflow: hidden; }

fieldset, legend { border: 0; }

legend { white-space: normal; color: inherit; display: table; max-width: 100%; padding: 0; }

select { cursor: pointer; }

select:-moz-focusring { color: transparent; text-shadow: 0 0 0 #000; }

button[disabled], input[disabled] { cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

button, input, select, textarea { vertical-align: baseline; font: inherit; background: none; border-radius: 0; margin: 0; }

button, input, select { overflow: visible; }

input { appearance: none; -moz-appearance: none; -webkit-appearance: none; }

input::-moz-focus-inner { border: 0; padding: 0; }

input[type=checkbox], input[type=radio] { cursor: pointer; padding: 0; }

input[type=checkbox] { -moz-appearance: checkbox; -webkit-appearance: checkbox; }

input[type=radio] { -moz-appearance: radio; -webkit-appearance: radio; }

input[type=number] { width: auto; }

input[type=number]::-webkit-outer-spin-button, input[type=number]::-webkit-inner-spin-button { height: auto; }

button, input[type=button], input[type=reset], input[type=submit] { appearance: button; -moz-appearance: button; -webkit-appearance: button; cursor: pointer; }

textarea { vertical-align: top; overflow: auto; resize: vertical; -moz-appearance: none; -webkit-appearance: none; }

table { border-collapse: collapse; border-spacing: 0; table-layout: fixed; }

progress { display: inline-block; vertical-align: baseline; }

menu { margin: 1em 0; padding: 0 0 0 40px; }

hr { box-sizing: content-box; height: 0; overflow: visible; }

sup { position: relative; top: -0.5em; font-size: 75%; line-height: 0; vertical-align: baseline; }

@font-face { font-family: 'lato'; src: url("../fonts/lato-regular.woff2") format("woff2"), url("../fonts/lato-regular.woff") format("woff"), url("../fonts/lato-regular.ttf") format("truetype"); font-weight: 400; font-style: normal; }

@font-face { font-family: 'latobold'; src: url("../fonts/lato-bold.woff2") format("woff2"), url("../fonts/lato-bold.woff") format("woff"), url("../fonts/lato-bold.ttf") format("truetype"); font-weight: 400; font-style: normal; }

@font-face { font-family: 'latoitalic'; src: url("../fonts/lato-italic.woff2") format("woff2"), url("../fonts/lato-italic.woff") format("woff"), url("../fonts/lato-italic.ttf") format("truetype"); font-weight: 400; font-style: normal; }

@font-face { font-family: 'latobolditalic'; src: url("../fonts/lato-bolditalic.woff2") format("woff2"), url("../fonts/lato-bolditalic.woff") format("woff"), url("../fonts/lato-bolditalic.ttf") format("truetype"); font-weight: 400; font-style: normal; }

/******* GÉNÉRAL *******/
::-moz-selection { background: black; color: white; text-shadow: none; }

::selection { background: black; color: white; text-shadow: none; }

html { font-size: 62.5%; /* sets the base font to 10px for easier math */ }

body { font-family: "lato", sans-serif; font-size: 1.6rem; line-height: 1.2; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

h1 { font-size: 5rem; margin: 0.67em 0; }

h2 { font-size: 3rem; margin: 0.83em 0; }

h3 { font-size: 2.4em; margin: 1em 0; }

h4 { font-size: 2.2rem; margin: 1.33em 0; }

h5 { font-size: 2rem; margin: 1.67em 0; }

h6 { font-size: 1.8rem; margin: 2.33em 0; }

p { margin: 1em 0; }

blockquote { margin: 1em 40px; }

ol, ul { padding: 0; margin: 1em 0; }

ol { counter-reset: ol-counter; }

ol > li { counter-increment: ol-counter; }

ol > li:before { content: counter(ol-counter) "."; }

img { max-width: 100%; height: auto; }

code, pre { display: block; padding: 10px 15px; margin: 1em 0; background: grey; }

hr { height: 1px; max-width: 250px; border: 0; margin: 3em auto 5em; background: black; }

/******* LIENS / BOUTONS *******/
a { color: inherit; text-decoration: none; transition: 0.3s ease-in-out; }

a:focus { outline: 0; }

/******* CLASSES GENERALES  *******/
.hidden { display: none !important; }

.wrapper-alignment { display: table; width: 100%; table-layout: fixed; }

.content-align-middle { display: table-cell; vertical-align: middle; }

.content-align-top { display: table-cell; vertical-align: top; }

.clearfix:after { content: ''; display: table; clear: both; }

.pos-relative { position: relative; }

.align-center { text-align: center; }

.align-left { text-align: left; }

.align-right { text-align: right; }

.inline-b { display: inline-block; vertical-align: middle; -webkit-transform: translateY(-0.1em); transform: translateY(-0.1em); }

.full-width { width: 100%; }

.wrapper-overflow-hidden { position: relative; overflow: hidden; }

.img-fit.compat-object-fit { background-size: cover; background-position: 50% 50%; }

.img-fit.compat-object-fit img { opacity: 0; }

/* Placeholders */
/* Grid */
.container { max-width: 1200px; padding: 0 20px; margin: 0 auto; }

.container.large { max-width: 1360px; }

/* Forms */
fieldset.search-group { position: relative; border-bottom: 1px solid #ccd2d6; }

input, textarea, select, button { transition: 0.3s ease-in-out; }

input:focus, textarea:focus, select:focus, button:focus { outline: 0; }

input:-webkit-autofill, textarea:-webkit-autofill { box-shadow: 0 0 0 1000px #fff inset; }

input { border: none; color: #091f2d; }

input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration { display: none; }

input.search-input { font-size: 1.5rem; padding: 4px 100px 4px 0; }

select::-ms-expand { display: none; }

button { border: none; }

button.btn-search { display: block; width: 14px; height: 14px; position: absolute; top: 50%; right: 0; margin-top: -7px; }

button.btn-search .icon { display: block; width: 100%; height: 100%; }

/* Header */
#header { padding: 20px 0 16px; }

#header .container { display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-justify-content: space-between; -ms-flex-pack: justify; justify-content: space-between; }

#header-right { padding-top: 12px; }

#logo { display: inline-block; vertical-align: middle; height: 42px; margin: 0 70px 0 0; text-indent: -99em; overflow: hidden; }

#logo img { display: block; }

#logo span { position: absolute; }

#form-header { display: inline-block; vertical-align: middle; }

/* Footer */
/* Buttons */
.btn-bookmarks { display: block; width: 22px; height: 19px; }

.btn-bookmarks .icon { display: block; width: 100%; height: 100%; }

/* Home specific style */
/******* PRINT *******/
@media print { *, *:before { color: #000 !important; }
    a { text-decoration: underline; }
    a[href^="#"]:after { content: ''; }
    img { page-break-inside: avoid; }
    @page { margin: .5cm; }
    p, h2, h3 { orphans: 3; widows: 3; }
    h2, h3 { page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
